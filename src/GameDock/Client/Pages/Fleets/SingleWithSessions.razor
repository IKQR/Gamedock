@page "/fleets/{id}"
@attribute [Authorize]
@inject HttpClient HttpClient

<div class="row">
    <div class="col-md">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <NavLink href="/fleets">Fleets</NavLink>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Id</li>
            </ol>
        </nav>
    </div>
</div>

@if (_isLoading)
{
    <p>Loading...</p>
}
else if (_fleetInfo != null)
{
    <div class="row">
        <div class="col">
            <h3>Fleet @Id:</h3>
        </div>
        <div class="col">
            <div class="float-end">
                <div class="col-md-1">
                    <RefreshButton OnRefresh="RefreshAsync"/>
                </div>
            </div>
        </div>
    </div>
    <div class="">
        <FleetInfoView FleetInfo="_fleetInfo"/>
    </div>
    <div class="mt-2">
        <div class="row">
            <div class="col-auto">
                <RebuildButton BuildId="@_fleetInfo.Id"></RebuildButton>
            </div>
        </div>
    </div>
}
else
{
    <p>Build Info not found.</p>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private FleetInfoDto _fleetInfo;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await RefreshAsync();
        _isLoading = false;
    }

    private async Task RefreshAsync()
    {
        _fleetInfo = await HttpClient.GetFromJsonAsync<FleetInfoDto>($"/api/fleet/info/{Id}");
    }
}