@page "/fleets"
@attribute [Authorize]
@inject HttpClient Http

<div class="row">
    <div class="col-auto">
        <h3>List of uploaded builds:</h3>
    </div>
    <div class="col-auto">
        <NavLink class="btn btn-sm btn-primary" href="/fleets/create">
            <i class="bi bi-upload"></i>&nbsp;Create new
        </NavLink>
    </div>
    <div class="col">
        <div class="float-end">
            <RefreshButton OnRefresh="RefreshAsync"/>
        </div>
    </div>
</div>
<div>
    <FleetsListView Fleets="_fleets"/>
</div>


@code{
    private FleetInfoDto[] _fleets;

    protected override async Task OnInitializedAsync()
    {
        await RefreshAsync();
    }

    private async Task RefreshAsync()
    {
        // var fleets = await Http.GetFromJsonAsync<FleetInfoDto[]>("/api/fleet/info");
        var fleets = new[]
        {
            new()
            {
                Id = Guid.NewGuid(),
                BuildId = Guid.NewGuid(),
                Runtime = "dotnet",
                Ports = new int[] { 8080, 8081 },
                LaunchParameters = "--env=prod",
                Status = "Running",
                ImageId = "123456",
                CreatedAt = DateTime.Now.AddDays(-1),
                UpdatedAt = DateTime.Now.AddDays(-1)
            },
            new FleetInfoDto
            {
                Id = Guid.NewGuid(),
                BuildId = Guid.NewGuid(),
                Runtime = "node",
                Ports = new int[] { 3000 },
                LaunchParameters = "--env=dev",
                Status = "Stopped",
                ImageId = "987654",
                CreatedAt = DateTime.Now.AddDays(-2),
                UpdatedAt = DateTime.Now.AddDays(-2)
            },
            new FleetInfoDto
            {
                Id = Guid.NewGuid(),
                BuildId = Guid.NewGuid(),
                Runtime = "java",
                Ports = new int[] { 8080, 8443 },
                LaunchParameters = "-Xmx512m",
                Status = "Running",
                ImageId = "654321",
                CreatedAt = DateTime.Now.AddDays(-3),
                UpdatedAt = DateTime.Now.AddDays(-3)
            },
            new FleetInfoDto
            {
                Id = Guid.NewGuid(),
                BuildId = Guid.NewGuid(),
                Runtime = "python",
                Ports = new int[] { 5000 },
                LaunchParameters = "",
                Status = "Running",
                ImageId = "789012",
                CreatedAt = DateTime.Now.AddDays(-4),
                UpdatedAt = DateTime.Now.AddDays(-4)
            },
            new FleetInfoDto
            {
                Id = Guid.NewGuid(),
                BuildId = Guid.NewGuid(),
                Runtime = "go",
                Ports = new int[] { 8080, 8081, 8082 },
                LaunchParameters = "-mode=prod",
                Status = "Running",
                ImageId = "345678",
                CreatedAt = DateTime.Now.AddDays(-5),
                UpdatedAt = DateTime.Now.AddDays(-5)
            }
        };

        _fleets = fleets.OrderByDescending(x => x.UpdatedAt).ToArray();
    }

}