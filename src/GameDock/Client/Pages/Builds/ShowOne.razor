@page "/builds/{id}"
@using GameDock.Shared.Dto
@using System.Globalization

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Build Info</h3>

<div class="row">
    <div class="col-md">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/">Main</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Id</li>
            </ol>

        </nav>
    </div>
    <div class="col-md-1">
        <button class="btn btn-secondary btn-sm" @onclick="RefreshPage">
            <i class="bi bi-arrow-repeat"></i>
        </button>
    </div>
</div>

@if (_isLoading)
{
    <p>Loading...</p>
}
else if (_buildInfo != null)
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Name: @_buildInfo.Name</h5>
            <p class="card-text">Version: @_buildInfo.Version</p>
            <p class="card-text">Status: @_buildInfo.Status</p>
            <p class="card-text">Created At: @_buildInfo.CreatedAt.ToString(CultureInfo.InvariantCulture)</p>
            <p class="card-text">Updated At: @_buildInfo.UpdatedAt.ToString(CultureInfo.InvariantCulture)</p>
        </div>
    </div>
    <div class="mt-2 btn-toolbar">

        <RunButton BuildId="@_buildInfo.Id"/>

        @if (_buildInfo.Status == "Failed")
        {
            <span class="ms-2">
                <RebuildButton BuildId="@_buildInfo.Id"/>
            </span>
        }
    </div>
}
else
{
    <p>Build Info not found.</p>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private BuildInfoDto _buildInfo;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        _buildInfo = await HttpClient.GetFromJsonAsync<BuildInfoDto>($"/api/build/info/{Id}");
        _isLoading = false;
    }

    private async Task RefreshPage()
    {
        _isLoading = true;
        StateHasChanged();

        _buildInfo = await HttpClient.GetFromJsonAsync<BuildInfoDto>($"/api/build/info/{Id}");
        _isLoading = false;
    }

}

