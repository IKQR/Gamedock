@using GameDock.Shared.Dto
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (_builds == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
            <th scope="col">Version</th>
            <th scope="col">Status</th>
            <th scope="col">Created At</th>
            <th scope="col">Updated At</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var build in _builds)
        {
            <tr>
                <td>
                    <a @onclick="@(e => NavigateToBuildDetail(build.Id))" class="text-primary">@build.Id</a>
                </td>
                <td>@build.Name</td>
                <td>@build.Version</td>
                <td>@build.Status</td>
                <td>@build.CreatedAt</td>
                <td>@build.UpdatedAt</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private BuildInfoDto[] _builds;

    protected override async Task OnInitializedAsync()
    {
        _builds = await Http.GetFromJsonAsync<BuildInfoDto[]>("/api/build/info");
    }

    private void NavigateToBuildDetail(Guid id)
    {
        NavigationManager.NavigateTo($"/builds/{id}");
    }
}